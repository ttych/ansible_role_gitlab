---

- name: stat Git distribution
  stat:
    path: "{{ gitlab_tools_git_dir }}/bin/git"
  register: t_gitlab_git_bin

- name: "set install Git to {{ not t_gitlab_git_bin.stat.exists }}"
  set_fact:
    t_gitlab_git_install: "{{ not t_gitlab_git_bin.stat.exists }}"

- name: check Git distribution
  block:
    - name: get Git version
      shell: "{{ gitlab_tools_git_dir }}/bin/git --version | cut -d ' ' -f3"
      changed_when: no
      register: t_gitlab_git_version

    - name: set gitlab_git_version_valid
      set_fact:
        gitlab_git_version_valid: "{{ t_gitlab_git_version.stdout is version('2.22.0', '>=') }}"

    - name: check Git shared object dependency with pcre2
      shell: "ldd {{ gitlab_tools_git_dir }}/bin/git | grep pcre2"
      changed_when: false
      failed_when: false
      register: t_gitlab_git_pcre2_dep

    - name: "set t_gitlab_git_install fact"
      set_fact:
        t_gitlab_git_install: "{{ not gitlab_git_version_valid or (t_gitlab_git_pcre2_dep.rc != 0) }}"

  when: t_gitlab_git_bin.stat.exists


- name: "install Git {{ gitlab_git_version }}"
  block:
    - name: "download Git {{ gitlab_git_version }}"
      get_url:
        url: "{{ gitlab_git_url }}"
        dest: "{{ gitlab_distfiles_dir }}/{{ gitlab_git_archive }}"
        mode: "0644"
        # validate_certs: no

    - name: "extract archive"
      unarchive:
        remote_src: yes
        src: "{{ gitlab_distfiles_dir }}/{{ gitlab_git_archive }}"
        dest: "{{ gitlab_tmp_dir }}"
        mode: "go-w"

    - name: "install to {{ gitlab_tools_dir }}/{{ gitlab_git_release }}"
      shell: "./configure --prefix={{ gitlab_tools_dir }}/{{ gitlab_git_release }} --with-libpcre && make -j {{ ansible_processor_vcpus|d(ansible_processor_count) }} all && make install"
      args:
        chdir: "{{ gitlab_tmp_dir }}/{{ gitlab_git_release }}"
      environment:
        PATH: "{{ gitlab_build_PATH }}"
        CPPFLAGS: "{{ gitlab_CPPFLAGS | default('') }}"
        LDFLAGS: "{{ gitlab_LDFLAGS | default('') }}"

    - name: "link this release"
      file:
        src: "{{ gitlab_tools_dir }}/{{ gitlab_git_release }}"
        dest: "{{ gitlab_tools_git_dir }}"
        force: yes
        state: link

    - name: clean build directory
      file:
        path: "{{ gitlab_tmp_dir }}/{{ gitlab_git_release }}"
        state: absent

  when: t_gitlab_git_install
