---

- name: "test if {{ gitlab_postgresql_user }} postgresql user exists"
  shell: psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{ gitlab_postgresql_user }}'" | grep 1
  changed_when: no
  failed_when: no
  become: yes
  become_user: "{{ gitlab_postgresql_owner }}"
  register: t_gitlab_postgresql_owner_exists

- block:
    - name: "create {{ gitlab_postgresql_user }} postgresql user"
      command: psql -d template1 -c "CREATE USER {{ gitlab_postgresql_user }} CREATEDB;"

    - name: add pg_trgm extension
      command: psql -d template1 -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
  become: yes
  become_user: "{{ gitlab_postgresql_owner }}"
  when: t_gitlab_postgresql_owner_exists.rc != 0


- name: "test if {{ gitlab_postgresql_db }} db exist"
  shell: psql -lqt | cut -d \| -f 1 | grep -qw "{{ gitlab_postgresql_db }}"
  changed_when: no
  failed_when: no
  become: yes
  become_user: "{{ gitlab_postgresql_owner }}"
  register: t_gitlab_postgresql_db_exists

- name: "create {{ gitlab_postgresql_db }} database"
  command: psql -d template1 -c "CREATE DATABASE {{ gitlab_postgresql_db }} OWNER {{ gitlab_postgresql_user }};"
  become: yes
  become_user: "{{ gitlab_postgresql_owner }}"
  when: t_gitlab_postgresql_db_exists.rc != 0


- name: test connection to db with user
  command: psql -d "{{ gitlab_postgresql_db }}"
  changed_when: no
  become: yes
  become_user: "{{ gitlab_postgresql_user }}"
  register: t_gitlab_postgresql_connection_status

- name: test if pg_trgm is enabled
  shell: psql -d "{{ gitlab_postgresql_db }}" -tAc "SELECT true AS enabled FROM pg_available_extensions WHERE name = 'pg_trgm' AND installed_version IS NOT NULL;" | grep -qw t
  changed_when: no
  become: yes
  become_user: "{{ gitlab_postgresql_user }}"
  register: t_gitlab_postgresql_trgm_status
